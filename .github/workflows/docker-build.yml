# .github/workflows/docker-build.yml
name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'docker/**'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ncs-build

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Create Dockerfile
      run: |
        mkdir -p docker
        cat > docker/Dockerfile << 'EOF'
        FROM ubuntu:22.04
        
        ENV DEBIAN_FRONTEND=noninteractive
        ENV ZEPHYR_TOOLCHAIN_VARIANT=zephyr
        ENV ZEPHYR_SDK_INSTALL_DIR=/opt/zephyr-sdk
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            build-essential \
            ccache \
            cmake \
            curl \
            device-tree-compiler \
            dfu-util \
            file \
            g++ \
            gcc \
            gcc-multilib \
            git \
            gperf \
            libsdl2-dev \
            libffi-dev \
            libssl-dev \
            make \
            ninja-build \
            python3 \
            python3-dev \
            python3-pip \
            python3-setuptools \
            python3-tk \
            python3-wheel \
            python3-venv \
            wget \
            xz-utils \
            unzip \
            && rm -rf /var/lib/apt/lists/*
        
        RUN ln -s /usr/bin/python3 /usr/bin/python
        
        # Install Zephyr SDK
        ARG ZEPHYR_SDK_VERSION=0.16.8
        RUN cd /tmp && \
            wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZEPHYR_SDK_VERSION}/zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.xz && \
            tar -xf zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.xz && \
            mv zephyr-sdk-${ZEPHYR_SDK_VERSION} /opt/zephyr-sdk && \
            rm zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-x86_64.tar.xz && \
            cd /opt/zephyr-sdk && \
            ./setup.sh -h -c
        
        # Install west
        RUN pip3 install --no-cache-dir west
        
        # Git configuration
        RUN git config --global user.email "ci@example.com" && \
            git config --global user.name "CI User"
        
        # Set up NCS workspace
        WORKDIR /workdir
        RUN west init -m https://github.com/nrfconnect/sdk-nrf --mr v3.0.1 ncs && \
            cd ncs && \
            west update && \
            west zephyr-export && \
            pip3 install --no-cache-dir -r zephyr/scripts/requirements.txt && \
            pip3 install --no-cache-dir -r nrf/scripts/requirements.txt && \
            pip3 install --no-cache-dir -r bootloader/mcuboot/scripts/requirements.txt
        
        WORKDIR /workdir/ncs
        ENV ZEPHYR_BASE=/workdir/ncs/zephyr
        
        CMD ["/bin/bash"]
        EOF
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: docker
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max