name: Simple Zephyr CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Start with just a basic build test
  basic-build:
    runs-on: ubuntu-latest
    container:
      image: nordicplayground/nrfconnect-sdk:v3.0-branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: project

    - name: Verify environment
      run: |
        echo "=== Environment Check ==="
        which west
        which arm-none-eabi-gcc
        west --version
        arm-none-eabi-gcc --version

    - name: Initialize workspace
      run: |
        echo "=== Initializing West Workspace ==="
        west init -l project
        cd project
        west update --narrow -o=--depth=1

    - name: Build simple sample
      run: |
        echo "=== Building Hello World Sample ==="
        cd project
        source zephyr/zephyr-env.sh
        west build -b nrf52840dk_nrf52840 zephyr/samples/hello_world
        
        echo "=== Build Results ==="
        ls -la build/zephyr/
        arm-none-eabi-size build/zephyr/zephyr.elf

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: hello-world-firmware
        path: project/build/zephyr/zephyr.hex

  # Test your actual application (only if basic build works)
  app-build:
    runs-on: ubuntu-latest
    needs: basic-build
    container:
      image: nordicplayground/nrfconnect-sdk:v3.0-branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: project

    - name: Initialize workspace  
      run: |
        west init -l project
        cd project
        west update --narrow -o=--depth=1

    - name: Build application
      run: |
        cd project
        source zephyr/zephyr-env.sh
        
        # Check if app directory exists
        if [ ! -d "app" ]; then
          echo "Creating minimal app for testing..."
          mkdir -p app/src
          
          # Create minimal CMakeLists.txt
          cat > app/CMakeLists.txt << 'EOF'
cmake_minimum_required(VERSION 3.20.0)
find_package(Zephyr REQUIRED HINTS $ENV{ZEPHYR_BASE})
project(test_app)
target_sources(app PRIVATE src/main.c)
EOF
          
          # Create minimal prj.conf
          cat > app/prj.conf << 'EOF'
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
EOF
          
          # Create minimal main.c
          cat > app/src/main.c << 'EOF'
#include <zephyr/kernel.h>
#include <zephyr/logging/log.h>

LOG_MODULE_REGISTER(main, LOG_LEVEL_INF);

int main(void)
{
    LOG_INF("Hello from test application!");
    
    while (1) {
        LOG_INF("Application running...");
        k_sleep(K_SECONDS(5));
    }
    
    return 0;
}
EOF
        fi
        
        # Build the application
        west build -b nrf52840dk_nrf52840 app/
        
        echo "=== Application Build Results ==="
        ls -la build/zephyr/
        arm-none-eabi-size build/zephyr/zephyr.elf

    - name: Upload app artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-firmware
        path: project/build/zephyr/zephyr.hex