name: Zephyr Build Test - Ubuntu

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test 1: Setup environment from scratch
  test-ubuntu-setup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        echo "=== Installing System Dependencies ==="
        sudo apt-get update
        sudo apt-get install -y \
          git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools \
          python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib \
          libsdl2-dev libmagic1

    - name: Install ARM GCC toolchain
      run: |
        echo "=== Installing ARM GCC Toolchain ==="
        cd /tmp
        wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        sudo tar -xjf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2 -C /opt/
        echo "/opt/gcc-arm-none-eabi-10.3-2021.10/bin" >> $GITHUB_PATH

    - name: Install Python dependencies
      run: |
        echo "=== Installing Python Dependencies ==="
        pip3 install --user west
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Verify installation
      run: |
        echo "=== Verifying Installation ==="
        west --version
        arm-none-eabi-gcc --version
        cmake --version
        ninja --version

  # Test 2: Basic Zephyr setup
  test-zephyr-setup:
    runs-on: ubuntu-latest
    needs: test-ubuntu-setup

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          /opt/gcc-arm-none-eabi-10.3-2021.10
        key: ${{ runner.os }}-zephyr-deps-v1

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
        
        # Install ARM toolchain if not cached
        if [ ! -d "/opt/gcc-arm-none-eabi-10.3-2021.10" ]; then
          cd /tmp
          wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          sudo tar -xjf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2 -C /opt/
        fi
        echo "/opt/gcc-arm-none-eabi-10.3-2021.10/bin" >> $GITHUB_PATH
        
        pip3 install --user west
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Initialize Zephyr workspace
      run: |
        echo "=== Creating Zephyr Workspace ==="
        mkdir zephyr-workspace
        cd zephyr-workspace
        
        # Initialize with just Zephyr (no Nordic NCS yet)
        west init --mr v3.4.0 https://github.com/zephyrproject-rtos/zephyr.git
        west update
        
        echo "=== Workspace Contents ==="
        ls -la

    - name: Install Zephyr dependencies
      run: |
        cd zephyr-workspace
        pip3 install --user -r zephyr/scripts/requirements.txt

    - name: Test Zephyr environment
      run: |
        cd zephyr-workspace
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        export GNUARMEMB_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi-10.3-2021.10
        source zephyr/zephyr-env.sh
        
        echo "=== Environment Variables ==="
        echo "ZEPHYR_BASE: $ZEPHYR_BASE"
        echo "ZEPHYR_TOOLCHAIN_VARIANT: $ZEPHYR_TOOLCHAIN_VARIANT"
        echo "GNUARMEMB_TOOLCHAIN_PATH: $GNUARMEMB_TOOLCHAIN_PATH"

  # Test 3: Build Hello World
  test-hello-build:
    runs-on: ubuntu-latest
    needs: test-zephyr-setup

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
        
        cd /tmp
        wget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
        sudo tar -xjf gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2 -C /opt/
        echo "/opt/gcc-arm-none-eabi-10.3-2021.10/bin" >> $GITHUB_PATH
        
        pip3 install --user west
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Setup Zephyr workspace
      run: |
        mkdir zephyr-workspace
        cd zephyr-workspace
        west init --mr v3.4.0 https://github.com/zephyrproject-rtos/zephyr.git
        west update
        pip3 install --user -r zephyr/scripts/requirements.txt

    - name: Build Hello World for QEMU
      run: |
        cd zephyr-workspace
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        export GNUARMEMB_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi-10.3-2021.10
        source zephyr/zephyr-env.sh
        
        echo "=== Building Hello World for QEMU x86 ==="
        west build -b qemu_x86 zephyr/samples/hello_world
        
        echo "=== Build Results ==="
        ls -la build/zephyr/
        file build/zephyr/zephyr.elf

    - name: Build Hello World for nRF52840
      run: |
        cd zephyr-workspace
        export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
        export GNUARMEMB_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi-10.3-2021.10
        source zephyr/zephyr-env.sh
        
        echo "=== Building Hello World for nRF52840 ==="
        west build -b nrf52840dk_nrf52840 zephyr/samples/hello_world --pristine
        
        echo "=== Build Results ==="
        ls -la build/zephyr/
        arm-none-eabi-size build/zephyr/zephyr.elf
        
        echo "=== Firmware Files ==="
        ls -la build/zephyr/zephyr.hex build/zephyr/zephyr.bin

    - name: Upload nRF52840 firmware
      uses: actions/upload-artifact@v3
      with:
        name: hello-world-nrf52840
        path: |
          zephyr-workspace/build/zephyr/zephyr.hex
          zephyr-workspace/build/zephyr/zephyr.bin
          zephyr-workspace/build/zephyr/zephyr.elf